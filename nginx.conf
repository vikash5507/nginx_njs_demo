user nginx;

worker_processes 1;

error_log   /var/log/nginx/error.log debug;

pid /var/run/nginx.pid;

load_module modules/ngx_http_js_module.so;

load_module modules/ngx_stream_js_module.so;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" $request_time '
                    '"$http_org_src_ip" "$http_x_edgeconnect_session_id" '
                    '"$http_ex_correlation_id" "$sent_http_x_correlation_id" $server_port $upstream_addr '
                    '"$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    server_tokens off;

    log_subrequest on; #Log Subrequest Access Log

    js_var $cal_mask_header 'X-AUTHN-APP-ID, X-DEPTH';
    js_var $log_marker off;

    sendfile on;
    # tcp_nopush on;

    keepalive_timeout 65;

    add_header X-XSS-Protection "1; mode=block";

    # gzip on;

    js_path "/etc/nginx/conf.d/modules";

    js_var $x_correlation_id '';
    js_var $x_req_id '';
    js_var $x_depth '';
    js_var $cal_app_name VDP_DEMO_WS;
    js_var $x_authn_app_id '';

    map $server_protocol $allow_access {
        HTTP/1.0 0;
        HTTP/1.1 0;
        HTTP/2.0 0;
        default 1;
    }

    upstream authn {
        #server "localauthn.com:9000" max_fails=0;
        server "host.docker.internal:9000" max_fails=0;
        keepalive 250;
        keepalive_timeout 10;
    }

    upstream arm {
        #server "localarm.com:9000" max_fails=0;
        server "host.docker.internal:9000" max_fails=0;
        keepalive 250;
        keepalive_timeout 10;
    }

    upstream healthcheck {
        # server "localhealthcheck.com:9000" max_fails=0;
        server "host.docker.internal:9000" max_fails=0;
        keepalive 25;
    }

    

    include /etc/nginx/conf.d/*.conf;
}

stream {
    
    js_path "/etc/nginx/conf.d/modules";

    js_import auth from auth_request.js; #stream auth verify

    server {
        listen 8085;
        
        js_preread auth.stream_preread_verify;

        proxy_pass 127.0.0.1:8081;
        
    }
    
    server {
        listen 8081;
        
        return BACKEND\n;
    }

    #include /etc/nginx/conf.d/*.conf;
}